# azure-pipelines.yml
trigger:
- main

variables:
  APP_NAME: 'my-flask-app'
  RESOURCE_GROUP: 'my-resource-group'
  PYTHON_VERSION: '3.11'
  VM_IMAGE: 'ubuntu-latest'
  -group: azure-creds  # Contains AZURE_CLIENT_ID, AZURE_CLIENT_SECRET, AZURE_TENANT_ID, AZURE_SUBSCRIPTION_ID

stages:
- stage: Build
  displayName: Build and Test
  jobs:
  - job: Build
    pool:
      vmImage: $(VM_IMAGE)
    steps:
    - checkout: self

    - task: UsePythonVersion@0
      displayName: 'Setup Python'
      inputs:
        versionSpec: $(PYTHON_VERSION)

    - script: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install gunicorn pytest
      displayName: 'Install dependencies'

    - script: |
        pytest --junitxml=test-results/pytest.xml || ([ $? -eq 5 ] && echo "No tests found" && exit 0) || (echo "Tests failed" && exit 1)
      displayName: 'Run tests'

    - task: PublishTestResults@2
      inputs:
        testResultsFiles: '**/pytest.xml'
        testRunTitle: 'Pytest Results'
      condition: succeededOrFailed()

    - task: ArchiveFiles@2
      displayName: 'Package artifact'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/app.zip'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'

- stage: Deploy
  displayName: 'Deploy to Azure'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - job: Deploy
    pool:
      vmImage: $(VM_IMAGE)
    steps:
    - task: DownloadBuildArtifacts@0
      inputs:
        artifactName: 'drop'
        downloadPath: '$(System.ArtifactsDirectory)'

    # Fixed Azure CLI task - uses service principal auth without requiring ARM connection
    - script: |
        az login --service-principal \
          -u "$(AZURE_CLIENT_ID)" \
          -p "$(AZURE_CLIENT_SECRET)" \
          --tenant "$(AZURE_TENANT_ID)"
        
        az account set --subscription "$(AZURE_SUBSCRIPTION_ID)"
        
        az webapp deployment source config-zip \
          --resource-group "$(RESOURCE_GROUP)" \
          --name "$(APP_NAME)" \
          --src "$(System.ArtifactsDirectory)/drop/app.zip"
      displayName: 'Deploy to App Service'
      env:
        AZURE_CLIENT_ID: $(AZURE_CLIENT_ID)
        AZURE_CLIENT_SECRET: $(AZURE_CLIENT_SECRET)
        AZURE_TENANT_ID: $(AZURE_TENANT_ID)
        AZURE_SUBSCRIPTION_ID: $(AZURE_SUBSCRIPTION_ID)