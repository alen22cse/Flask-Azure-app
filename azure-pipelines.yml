# azure-pipelines.yml
trigger:
- main

variables:
  # Resource Config (update these)
  APP_NAME: 'my-flask-app'
  RESOURCE_GROUP: 'my-resource-group'
  PYTHON_VERSION: '3.11'
  VM_IMAGE: 'ubuntu-latest'
  -group: azure-creds

stages:
- stage: Build
  displayName: Build and Test
  jobs:
  - job: Build
    pool:
      vmImage: $(VM_IMAGE)
    steps:
    - checkout: self

    - task: UsePythonVersion@0
      displayName: 'Setup Python'
      inputs:
        versionSpec: $(PYTHON_VERSION)

    - script: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install gunicorn pytest
      displayName: 'Install dependencies'

    # Corrected test step condition
    - script: |
        pytest --junitxml=test-results/pytest.xml
      displayName: 'Run tests'
      condition: eq(variables['Build.SourceBranchName'], 'main')  # Only run tests on main branch
      # OR use file check via script:
      # condition: and(succeeded(), eq(1, 1))  # Always run

    - task: ArchiveFiles@2
      displayName: 'Package artifact'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/app.zip'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'

- stage: Deploy
  displayName: Deploy to Azure
  dependsOn: Build
  condition: succeeded()
  jobs:
  - job: Deploy
    pool:
      vmImage: $(VM_IMAGE)
    steps:
    - task: DownloadBuildArtifacts@0
      inputs:
        artifactName: 'drop'
        downloadPath: '$(System.ArtifactsDirectory)'

    - task: AzureCLI@2
      displayName: 'Deploy (Client Secret)'
      inputs:
        azureSubscription: ''
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az login --service-principal \
            -u "$(AZURE_CLIENT_ID)" \
            -p "$(AZURE_CLIENT_SECRET)" \
            --tenant "$(AZURE_TENANT_ID)"
          
          az account set --subscription "$(AZURE_SUBSCRIPTION_ID)"
          
          az webapp deployment source config-zip \
            --resource-group "$(RESOURCE_GROUP)" \
            --name "$(APP_NAME)" \
            --src "$(System.ArtifactsDirectory)/drop/app.zip"